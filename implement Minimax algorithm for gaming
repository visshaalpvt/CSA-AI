# Tic Tac Toe with Minimax AI

import math

# Print the board
def print_board(board):
    print("\n")
    print(f" {board[0]} | {board[1]} | {board[2]} ")
    print("---+---+---")
    print(f" {board[3]} | {board[4]} | {board[5]} ")
    print("---+---+---")
    print(f" {board[6]} | {board[7]} | {board[8]} ")
    print("\n")

# Check winner
def check_winner(board, player):
    win_combos = [
        [0,1,2], [3,4,5], [6,7,8],  # rows
        [0,3,6], [1,4,7], [2,5,8],  # cols
        [0,4,8], [2,4,6]            # diagonals
    ]
    for combo in win_combos:
        if all(board[i] == player for i in combo):
            return True
    return False

# Check if board full
def is_full(board):
    return " " not in board

# Minimax algorithm
def minimax(board, depth, is_maximizing):
    if check_winner(board, "O"):  # AI wins
        return 1
    if check_winner(board, "X"):  # Human wins
        return -1
    if is_full(board):  # Draw
        return 0

    if is_maximizing:
        best_score = -math.inf
        for i in range(9):
            if board[i] == " ":
                board[i] = "O"
                score = minimax(board, depth + 1, False)
                board[i] = " "
                best_score = max(score, best_score)
        return best_score
    else:
        best_score = math.inf
        for i in range(9):
            if board[i] == " ":
                board[i] = "X"
                score = minimax(board, depth + 1, True)
                board[i] = " "
                best_score = min(score, best_score)
        return best_score

# AI move
def best_move(board):
    best_score = -math.inf
    move = None
    for i in range(9):
        if board[i] == " ":
            board[i] = "O"
            score = minimax(board, 0, False)
            board[i] = " "
            if score > best_score:
                best_score = score
                move = i
    return move

# Main game loop
def tic_tac_toe():
    board = [" " for _ in range(9)]
    print("You are X, Computer is O")
    print_board(board)

    while True:
        # Human move
        while True:
            try:
                pos = int(input("Enter your move (1-9): ")) - 1
                if pos < 0 or pos > 8 or board[pos] != " ":
                    print("Invalid move, try again.")
                else:
                    board[pos] = "X"
                    break
            except ValueError:
                print("Enter a number between 1 and 9.")

        print_board(board)

        if check_winner(board, "X"):
            print("ðŸŽ‰ You win!")
            break
        if is_full(board):
            print("It's a draw!")
            break

        # AI move
        print("Computer is thinking...")
        ai_move = best_move(board)
        board[ai_move] = "O"
        print_board(board)

        if check_winner(board, "O"):
            print("ðŸ’» Computer wins!")
            break
        if is_full(board):
            print("It's a draw!")
            break


# Run the game
if __name__ == "__main__":
    tic_tac_toe()
